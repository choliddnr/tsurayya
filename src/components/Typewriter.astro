---
interface Props {
  phrases: string[];
  speed?: number; // typing speed in ms
  delay?: number; // delay before starting next phrase in ms
}

const { phrases, speed = 100, delay = 1500 } = Astro.props;
---

<span id="typewriter-text" class="font-bold"></span><span id="cursor" class="blinking-cursor">_</span>

<style>
  .blinking-cursor {
    animation: blink 1s step-end infinite;
  }

  @keyframes blink {
    from, to { opacity: 1; }
    50% { opacity: 0; }
  }
</style>

<script define:vars={{ phrases, speed, delay }}>
  const typewriterText = document.getElementById('typewriter-text');
  const cursor = document.getElementById('cursor');
  let phraseIndex = 0;
  let charIndex = 0;
  let isDeleting = false;

  function type() {
    const currentPhrase = phrases[phraseIndex];
    let displayedText = '';

    if (isDeleting) {
      displayedText = currentPhrase.substring(0, charIndex - 1);
    } else {
      displayedText = currentPhrase.substring(0, charIndex + 1);
    }

    typewriterText.textContent = displayedText;

    let typeSpeed = speed;

    if (isDeleting) {
      typeSpeed /= 2; // Faster deleting
    }

    if (!isDeleting && charIndex === currentPhrase.length) {
      typeSpeed = delay; // Pause at end of phrase
      isDeleting = true;
      cursor.style.visibility = 'visible'; // Ensure cursor is visible when paused
    } else if (isDeleting && charIndex === 0) {
      isDeleting = false;
      phraseIndex = (phraseIndex + 1) % phrases.length;
      typeSpeed = 500; // Pause before typing next phrase
      cursor.style.visibility = 'visible'; // Ensure cursor is visible when starting new phrase
    } else {
      cursor.style.visibility = 'visible'; // Keep cursor visible during typing/deleting
    }

    if (isDeleting) {
      charIndex--;
    } else {
      charIndex++;
    }

    setTimeout(type, typeSpeed);
  }

  document.addEventListener('DOMContentLoaded', type);
</script>
